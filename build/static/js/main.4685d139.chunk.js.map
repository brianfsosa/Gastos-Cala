{"version":3,"sources":["firebase.js","components/ExpenseTable.js","components/AdminCategory.js","components/AddExpense.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","moment","locale","ExpenseTable","useState","dataExpenses","setDataExpenses","expenses","setExpenses","categories","setCategories","sucursales","name","color","ordenar","data","ordenarFecha","fechaString","fechaSp","split","anio","Date","getFullYear","length","mes","dia","sort","a","b","fecha","reverse","getCategories","collection","onSnapshot","querySnapshot","cates","forEach","cate","push","id","getData","docs","doc","useEffect","exp","catColor","category","arr","colorIndex","findIndex","cat","dateRange","backgroundColor","borderRadius","width","p","placeholder","onChange","e","target","value","toFilter","filter","console","log","map","c","reduce","acum","curr","amount","size","concept","variant","m","colorScheme","franchise","AdminCategory","categoryDefault","colorPicked","SetColorPicked","newCategory","setNewCategory","addCategory","obj","Object","keys","every","k","set","alert","spacing","justify","as","mb","borderWidth","textAlign","display","templateColumns","i","onClick","s","mt","AddExpense","today","format","expensesDefault","newExpense","setNewExpense","changeSearch","addFirebase","padding","paddingLeft","ml","step","min","parseInt","App","bgcolor","height","shadow","pr","pl","fontFamily","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4685d139.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyCl5cIXdUtsMwz-1plPJ2hFmgHDFQaeKzE\",\r\n    authDomain: \"gastos-midnight.firebaseapp.com\",\r\n    projectId: \"gastos-midnight\",\r\n    storageBucket: \"gastos-midnight.appspot.com\",\r\n    messagingSenderId: \"296027626747\",\r\n    appId: \"1:296027626747:web:351414d2a9ecd93507245e\"\r\n  };\r\n  // Initialize Firebase\r\n  const fb = firebase.initializeApp(firebaseConfig);\r\n  export const db = fb.firestore();","import { React, useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport {\r\n  Tag,\r\n  Box,\r\n  Table,\r\n  Thead,\r\n  Tr,\r\n  Th,\r\n  Td,\r\n  Tbody,\r\n  Select,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n} from \"@chakra-ui/react\";\r\nimport moment from \"moment\";\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css'\r\nmoment.locale(\"es\");\r\n\r\nfunction ExpenseTable() {\r\n  const [dataExpenses, setDataExpenses] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [datePicked, setDatePicked] = useState(['01-07-2021','30-07-2021']);\r\n  const sucursales = [\r\n    {\r\n      name: \"Capilla\",\r\n      color: \"cyan\",\r\n    },\r\n    {\r\n      name: \"La Cumbre\",\r\n      color: \"orange\",\r\n    },\r\n  ];\r\n\r\n  function ordenar (data){\r\n    function ordenarFecha (fechaString) {\r\n    let fechaSp = fechaString.split(\"-\");\r\n    let anio = new Date().getFullYear();\r\n    if (fechaSp.length === 3) {\r\n      anio = fechaSp[2];\r\n    }\r\n    let mes = fechaSp[1] - 1;\r\n    let dia = fechaSp[0];\r\n  \r\n    return new Date(anio, mes, dia);\r\n  }\r\n    const arr2 = \r\n  data.sort(function (a, b) { \r\n    return ordenarFecha(a.fecha) - ordenarFecha(b.fecha); \r\n  }).reverse()\r\n    \r\n   return arr2\r\n  }\r\n\r\n\r\n  const getCategories = async () => {\r\n    db.collection(\"setup\").onSnapshot((querySnapshot) => {\r\n      const cates = [];\r\n      querySnapshot.forEach((cate) => {\r\n        cates.push({ ...cate.data(), id: cate.id });\r\n      });\r\n      setCategories(cates);\r\n    });\r\n  };\r\n\r\n  const getData = async () => {\r\n    db.collection(\"gastos\").onSnapshot((querySnapshot) => {\r\n      const docs = [];\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setExpenses(ordenar(docs));\r\n      setDataExpenses(ordenar(docs));\r\n    });\r\n  };\r\n\r\n \r\n\r\n  useEffect(() => {\r\n    getCategories();\r\n    getData();\r\n }, []);\r\n\r\n  const catColor = (category, arr) => {\r\n    const colorIndex = arr.findIndex((cat) => cat.name === category);\r\n    return arr[colorIndex].color;\r\n  };\r\n  const filterByCategory = (e) => {\r\nif (e.target.value === \"\") {\r\n      setExpenses((dataExpenses));\r\n    } else {\r\n      const toFilter = dataExpenses.filter(\r\n        (p) => p.category === e.target.value\r\n      );\r\n      setExpenses(toFilter);\r\n      console.log(toFilter)\r\n    }\r\n  };\r\n  const expenseSum = (exp) => {\r\n    return exp.reduce((acum, curr) => {\r\n      return acum + curr.amount;\r\n    }, 0);\r\n  };\r\n\r\n  const filterByDate = (arr) => {\r\n    console.log(datePicked)\r\n    return arr.filter(\r\n      (n) => n.fecha >= moment(datePicked[0]).format(\"DD-MM-Y\") && n.fecha <= moment(datePicked[1]).format(\"DD-MM-Y\")\r\n    );\r\n  };\r\n  const [dateRange, setDateRange] = useState([null, null]);\r\n  const [startDate, endDate] = dateRange;\r\n  return (\r\n    \r\n    <Box backgroundColor='white' borderRadius='20px' width=\"xl\" p=\"10\">\r\n      \r\n      <Select borderRadius='20px'\r\n        placeholder=\"Filtrar por categoría\"\r\n        name=\"cat filter\"\r\n        onChange={filterByCategory}\r\n      > \r\n        {categories.map((c) => (\r\n          <option key={c.id}>{c.name}</option>\r\n        ))}\r\n      </Select>\r\n      <Stat>\r\n        <StatLabel>Total</StatLabel>\r\n        <StatNumber>${expenseSum(expenses)}</StatNumber>\r\n        <StatHelpText></StatHelpText>\r\n      </Stat>\r\n      {/* <DatePicker selectsRange={true}\r\n      dateFormat='d/mM/Y'\r\n      startDate={startDate}\r\n      endDate={endDate}\r\n      onChange={(update) => {\r\n        setDateRange(update);\r\n        setDatePicked([startDate,endDate])\r\n      }}\r\n      isClearable={true}></DatePicker> */}\r\n      <Table size=\"xl\">\r\n        <Thead>\r\n          <Tr>\r\n            <Th width=\"500px\">Fecha</Th>\r\n            <Th>Monto</Th>\r\n            <Th width=\"400px\">Concepto</Th>\r\n          </Tr>\r\n        </Thead>\r\n\r\n        <Tbody>\r\n          {expenses.map((e) => (\r\n            <Tr key={e.id}>\r\n              <Td>{e.fecha}</Td>\r\n              <Td>${e.amount}</Td>\r\n              <Td width=\"500px\">{e.concept}</Td>\r\n              <Td>\r\n                <Tag\r\n                  variant=\"solid\"\r\n                  m=\"1\"\r\n                  colorScheme={catColor(e.category, categories)}\r\n                >\r\n                  {e.category}\r\n                </Tag>\r\n                <Tag\r\n                  variant=\"solid\"\r\n                  m=\"1\"\r\n                  colorScheme={catColor(e.franchise, sucursales)}\r\n                >\r\n                  {e.franchise}\r\n                </Tag>\r\n              </Td>\r\n            </Tr>\r\n          ))}\r\n        </Tbody>\r\n      </Table>\r\n      \r\n    </Box>\r\n  );\r\n}\r\nexport default ExpenseTable;\r\n","import { useState, React } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Badge, Heading, Button, Grid, Box, Input, Wrap } from \"@chakra-ui/react\";\r\n\r\nfunction AdminCategory() {\r\n  const categoryDefault = {\r\n    name: \"\",\r\n    color: \"\",\r\n  };\r\n  const [colorPicked, SetColorPicked] = useState(\"blackAlpha\");\r\n  const [newCategory, setNewCategory] = useState(categoryDefault);\r\n  const colors = [\r\n    \"blackAlpha\",\r\n    \"blue\",\r\n    \"cyan\",\r\n    \"facebook\",\r\n    \"gray\",\r\n    \"green\",\r\n    \"linkedin\",\r\n    \"messenger\",\r\n    \"orange\",\r\n    \"pink\",\r\n    \"purple\",\r\n    \"red\",\r\n    \"teal\",\r\n    \"telegram\",\r\n    \"twitter\",\r\n    \"whatsapp\",\r\n    \"yellow\",\r\n  ];\r\n  const checkCamps = (obj) => {\r\n    const objProps = Object.keys(obj);\r\n    return objProps.every((k) => {\r\n      if (obj[k]) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n\r\n  function show(s) {\r\n    SetColorPicked(s);\r\n    setNewCategory({ ...newCategory, color: s });\r\n    console.log(colorPicked);\r\n  }\r\n  const handleCategoryName = (e) => {\r\n    console.log(e.target.value);\r\n    const { name, value } = e.target;\r\n    setNewCategory({ ...newCategory, [name]: value });\r\n  };\r\n  const addCategory = (cat) => {\r\n    if (checkCamps(cat)) {\r\n      db.collection(\"setup\").doc().set(newCategory);\r\n      setNewCategory(categoryDefault);\r\n      alert(\"Categoria agregada\");\r\n    } else {\r\n      alert(\"Por Favor seleccione un color y escriba un nombre\");\r\n    }\r\n  };\r\n  return (\r\n    <Box p=\"5\" width=\"500px\" borderRadius='20px' backgroundColor='white'>\r\n      <Wrap spacing=\"30px\" justify=\"center\">\r\n      <Heading as=\"h2\" mb=\"5px\">\r\n        Crear nueva categoria\r\n      </Heading>\r\n      <Input\r\n        mb=\"10px\"\r\n        value={newCategory.name}\r\n        name=\"name\"\r\n        width=\"300px\"\r\n        placeholder=\"Ingresa un nombre\"\r\n        onChange={handleCategoryName}\r\n        borderRadius='20px'\r\n      ></Input>\r\n      \r\n      <Box width=\"245px\" borderWidth=\"2px\">\r\n      <Badge\r\n        variant=\"solid\"\r\n        width=\"234px\"\r\n        textAlign=\"center\"\r\n        display=\"block\"\r\n        m=\"5px\"\r\n        colorScheme={colorPicked}\r\n      >\r\n        Seleciona Color\r\n      </Badge>\r\n        <Grid templateColumns=\"repeat(5,2fr)\" width=\"100px\">\r\n          {colors.map((e, i) => {\r\n            return (\r\n              <Button\r\n                key={i}\r\n                m=\"1\"\r\n                width=\"10px\"\r\n                onClick={() => show(e)}\r\n                colorScheme={e}\r\n              ></Button>\r\n            );\r\n          })}\r\n        </Grid>\r\n        <Button\r\n        mt=\"15px\"\r\n        colorScheme=\"twitter\"\r\n        onClick={() => addCategory(newCategory)}\r\n      >\r\n        Crear categoria\r\n      </Button>\r\n      </Box>\r\n      \r\n      </Wrap>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default AdminCategory;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Input,\r\n  Flex,\r\n  NumberInputField,\r\n  FormControl,\r\n  NumberInput,\r\n  FormLabel,\r\n  Select,\r\n  Wrap\r\n} from \"@chakra-ui/react\";\r\nimport { db } from \"../firebase\";\r\nimport moment from \"moment\";\r\nmoment.locale(\"es\");\r\n\r\nfunction AddExpense() {\r\n  const today = moment().format(\"DD-MM-Y\");\r\n  const [categories, setCategories] = useState([]);\r\n  const expensesDefault = {\r\n    fecha: today,\r\n    concept: \"\",\r\n    category: \"\",\r\n    franchise: \"\",\r\n    amount: 0,\r\n  };\r\n  const [newExpense, setNewExpense] = useState(expensesDefault);\r\n  const checkCamps = (obj) => {\r\n    const objProps = Object.keys(obj);\r\n    return objProps.every((k) => {\r\n      if (obj[k]) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getCategories();\r\n  }, []);\r\n  const getCategories = async () => {\r\n    db.collection(\"setup\").onSnapshot((querySnapshot) => {\r\n      const cates = [];\r\n      querySnapshot.forEach((cate) => {\r\n        cates.push({ ...cate.data(), id: cate.id });\r\n      });\r\n      setCategories(cates);\r\n    });\r\n  };\r\n\r\n  const changeSearchNum = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"amount\") {\r\n      setNewExpense({ ...newExpense, [name]: parseInt(value) });\r\n    } else {\r\n      setNewExpense({ ...newExpense, [name]: value });\r\n    }\r\n  };\r\n  const changeSearch = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setNewExpense({ ...newExpense, [name]: value });\r\n  };\r\n\r\n\r\n\r\n  const addFirebase = (exp) => {\r\n    if (checkCamps(exp)) {\r\n      db.collection(\"gastos\").doc().set(exp);\r\n      console.log(!newExpense);\r\n      setNewExpense({ ...expensesDefault });\r\n      alert(\"Gasto Agregado\");\r\n    } else {\r\n      alert(\"Por favor complete todos los campos\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n     \r\n      <Box width=\"600px\" padding=\"20px\" borderRadius='20px' backgroundColor='white'>\r\n      <Wrap spacing=\"30px\" justify=\"center\">\r\n        <form >\r\n          <Flex>\r\n            <Box>\r\n              <FormLabel paddingLeft='10px'>Concepto</FormLabel>\r\n              <Input\r\n                ml=\"5px\"\r\n                placeholder=\"Concepto\"\r\n                name=\"concept\"\r\n                width=\"300px\"\r\n                onChange={changeSearch}\r\n                value={newExpense.concept}\r\n                borderRadius='20px'\r\n              ></Input>\r\n            </Box>\r\n            <Box>\r\n              <FormLabel width=\"100px\">Importe</FormLabel>\r\n              <NumberInput\r\n                ml=\"5px\"\r\n                step={50}\r\n                min={0}\r\n                name=\"amount\"\r\n                value={newExpense.amount}\r\n                borderRadius='20px'\r\n              >\r\n                <NumberInputField\r\n                  width=\"100px\"\r\n                  onChange={changeSearchNum}\r\n                  placeholder=\"0\"\r\n                  value={newExpense.amount}\r\n                  borderRadius='20px'\r\n                ></NumberInputField>\r\n              </NumberInput>\r\n            </Box>\r\n            </Flex>\r\n            <Flex>\r\n            <Box>\r\n              <FormLabel>Sucursal</FormLabel>\r\n              <FormControl ml=\"5px\" id=\"sucursal\" name=\"franchise\">\r\n                <Select\r\n                  onChange={changeSearch}\r\n                  name=\"franchise\"\r\n                  placeholder=\"Sucursal\"\r\n                  value={newExpense.franchise}\r\n                  width='200px'\r\n                  borderRadius='20px'\r\n                >\r\n                  <option>Capilla</option>\r\n                  <option>La Cumbre</option>\r\n                  \r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            <Box>\r\n              <FormLabel>Categoria</FormLabel>\r\n              <FormControl ml=\"5px\" id=\"categoría\" name=\"category\">\r\n                <Select\r\n                  onChange={changeSearch}\r\n                  name=\"category\"\r\n                  placeholder=\"Categoria\"\r\n                  value={newExpense.category}\r\n                  width='200px'\r\n                  borderRadius='20px'\r\n                >\r\n                  {categories.map((c) => (\r\n                    <option key={c.id}>{c.name}</option>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Box>\r\n            </Flex>\r\n\r\n          <Button borderRadius='10' colorScheme='blue' mt=\"5\" onClick={() => addFirebase(newExpense)}>\r\n            Agregar gasto\r\n          </Button>\r\n        </form>\r\n      </Wrap>\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\nexport default AddExpense;\r\n","import React from \"react\";\nimport ExpenseTable from \"./components/ExpenseTable\";\nimport \"./style.css\"\nimport { Box, Wrap } from \"@chakra-ui/react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport AdminCategory from \"./components/AdminCategory\";\nimport AddExpense from \"./components/AddExpense\";\n\nfunction App() {\n  const bgcolor='gray.700'\n  return (\n   \n    <BrowserRouter>\n      <Box backgroundColor='orange.400' height=\"100px\" p=\"5\" color=\"white\">\n        <Wrap spacing=\"30px\" justify=\"center\">\n          <Box backgroundColor={bgcolor} color='white' borderRadius='30px'p='5px' shadow='xl' pr='20px' pl='20px' fontFamily='heading'>\n          <Link to=\"/home\">Home </Link>\n          </Box>\n          <Box backgroundColor={bgcolor} color='white' borderRadius='30px'p='5px'shadow='xl'pr='20px' pl='20px'>\n\n           <Link to=\"/addCategorie\">Agregar Categoria</Link>\n          </Box>\n          <Box backgroundColor={bgcolor} color='white' borderRadius='30px'p='5px'shadow='xl' pr='20px' pl='20px'>\n          <Link to=\"/addExpense\">Agregar Gasto</Link>\n          </Box>\n        </Wrap>\n      </Box>\n\n      <Wrap spacing=\"30px\" justify=\"center\" backgroundColor='gray.300'>\n        <Switch>\n        <Route path=\"/addCategorie\">\n          <AdminCategory></AdminCategory>\n        </Route>\n        <Route path=\"/addExpense\">\n          <AddExpense></AddExpense>\n        </Route>\n        <Route path=\"/\">\n          <ExpenseTable></ExpenseTable>\n        </Route>\n        </Switch>\n      </Wrap>\n    </BrowserRouter>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport './firebase'\nReactDOM.render(\n  \n  <React.StrictMode>\n    <ChakraProvider>\n    <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}